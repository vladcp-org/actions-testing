name: Run tests

on: 
  workflow_dispatch:

  # workflow_run:
  #   workflows: ["Deploy"]
  #   types: 
  #     - completed
  # pull_request:
  push:
    branches:
      - "feature/**"

permissions: write-all
jobs:
  tests:
    name: "Run dummy tests"
    runs-on: ubuntu-latest
    steps:
      - name: Dispatch an action and get the run ID
        uses: codex-/return-dispatch@v1
        id: return_dispatch
        with:
          token: ${{ github.token }}
          ref: ${{ github.head_ref || github.ref_name }}
          repo: actions-testing
          owner: vladcp-org
          workflow: deploy.yaml

      - name: Await Run ID ${{ steps.return_dispatch.outputs.run_id }}
        uses: Codex-/await-remote-run@v1.0.0
        with:
          token: ${{ github.token }}
          repo: actions-testing
          owner: vladcp-org
          run_id: ${{ steps.return_dispatch.outputs.run_id }}
          run_timeout_seconds: 300 # Optional
          poll_interval_ms: 5000 # Optional

      - uses: actions/checkout@v4
      - name: Print hello
        run: >
          echo "Hello World!"
      - name: Determine branch name
        run: |
          if [ "${{github.event_name}}" == "workflow_run" ]; then
            echo "BRANCH_NAME=${{github.event.workflow_run.head_branch}}" >> $GITHUB_ENV
          elif [ "${{github.event_name}}" == "workflow_dispatch" ]; then
            echo "BRANCH_NAME=${{github.ref_name || github.head_ref}}" >> $GITHUB_ENV
          fi
      - name: Print event branch, hopefully
        run: >
          echo "BRANCH NAME is ${{ env.BRANCH_NAME }}"

      - name: Recognize sha ref
        id: sharef
        run: |
          if [ "$EVENT" == 'pull_request' ]
          then
            echo "sha=${{github.event.pull_request.head.sha}}" >> $GITHUB_OUTPUT
          elif [ "$EVENT" == 'workflow_run' ]
          then
            echo "sha=${{github.event.workflow_run.head_sha}})" >> $GITHUB_OUTPUT
          else
            echo "sha=$GITHUB_SHA" >> $GITHUB_OUTPUT
          fi
        env:
          EVENT: ${{ github.event_name }}
          REF: ${{ github.ref }}

 
