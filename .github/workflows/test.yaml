name: Run tests

on: 
  workflow_dispatch:
    inputs: 
      pr_number:
        description: "Number of the PR to report to"

  # workflow_run:
  #   workflows: ["Deploy"]
  #   types: 
  #     - completed
  # pull_request:
  push:
    branches:
      - "feature/**"

permissions: write-all
jobs:
  tests:
    name: "Run dummy tests"
    runs-on: ubuntu-latest
    steps:
      # - name: Dispatch an action and get the run ID
      #   uses: codex-/return-dispatch@v1
      #   id: return_dispatch
      #   with:
      #     token: ${{ github.token }}
      #     ref: ${{ github.head_ref || github.ref_name }}
      #     repo: actions-testing
      #     owner: vladcp-org
      #     workflow: deploy.yaml

      # - name: Await Run ID ${{ steps.return_dispatch.outputs.run_id }}
      #   uses: Codex-/await-remote-run@v1.0.0
      #   with:
      #     token: ${{ github.token }}
      #     repo: actions-testing
      #     owner: vladcp-org
      #     run_id: ${{ steps.return_dispatch.outputs.run_id }}
      #     run_timeout_seconds: 300 # Optional
      #     poll_interval_ms: 5000 # Optional
      - name: View the github context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - uses: actions/checkout@v4
      - name: Print hello
        run: >
          echo "Hello World!"
      - name: Determine branch name
        run: |
          if [ "${{github.event_name}}" == "workflow_run" ]; then
            echo "BRANCH_NAME=${{github.event.workflow_run.head_branch}}" >> $GITHUB_ENV
          elif [ "${{github.event_name}}" == "workflow_dispatch" ]; then
            echo "BRANCH_NAME=${{github.ref_name || github.head_ref}}" >> $GITHUB_ENV
          fi
      - name: Print event branch, hopefully
        run: >
          echo "BRANCH NAME is ${{ env.BRANCH_NAME }}"

      - name: Recognize sha ref
        id: sharef
        run: |
          if [ "$EVENT" == 'pull_request' ]
          then
            echo "sha=${{github.event.pull_request.head.sha}}" >> $GITHUB_OUTPUT
          elif [ "$EVENT" == 'workflow_run' ]
          then
            echo "sha=${{github.event.workflow_run.head_sha}})" >> $GITHUB_OUTPUT
          else
            echo "sha=$GITHUB_SHA" >> $GITHUB_OUTPUT
          fi
        env:
          EVENT: ${{ github.event_name }}
          REF: ${{ github.ref }}
      - name: Get Pull Request Number
        id: pr
        run: echo "pull_request_number=$(gh pr view --json number -q .number || echo "")" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: get sha from PR number and save output
        id: get-sha
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('PR number: ' + ${{ steps.pr.outputs.pull_request_number }})
            const pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ steps.pr.outputs.pull_request_number }}
            })
            console.log('PR Head sha: ' + pr.data.head.sha)
            core.setOutput('sha', pr.data.head.sha)

      - name: Get workflow runs
        uses: actions/github-script@v5
        with:
          github-token: ${{ github.token }}
          script: |
            let found = false
            let deployWorkflow
            const {data: runs} = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: '${{ steps.get-sha.outputs.sha }}',
            })
            deployWorkflow = response.workflow_runs.find(workflow => workflow.name === "Deploy")
            if (deployWorkflow && deployWorkflow.length > 0) {
              found = true
            }
            console.log("Deploy workflow: ", JSON.stringify(deployWorkflow, null, 2))


      # todo report tests 
      # - name: Report tests check
      #   if: ${{ github.event.inputs.pr_number }}
      #   uses: actions/github-script@v3
      #   with:
      #     github-token: ${{ github.token }}
      #     script: |
      #       const checks = await github.checks.listForRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: '${{ steps.get-sha.outputs.sha }}'
      #       })
      #       const runDummyTestsCheck = checks.data.check_runs.find(check_run => check_run.name === "Run dummy tests")
      #       console.log("Found check run:", JSON.stringify(runDummyTestsCheck, null, 2));
      #       console.log('ID: ' + runDummyTestsCheck.id)
      #       const result = github.checks.update({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         check_run_id: runDummyTestsCheck.id,
      #         status: 'completed',
      #         conclusion: 'success',
      #         output: {
      #           title: 'Run dummy tests',
      #           summary: 'Results: marvellous results right here',
      #           text: 'You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.',
      #         },
      #         completed_at: new Date().toISOString(),
      #       })
      #       console.log("Response: ", JSON.stringify(result, null, 2));
      #       const check = await github.checks.listForRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: '${{ steps.get-sha.outputs.sha }}'
      #       })
      #       const dummy = check.data.check_runs.find(check_run => check_run.name === "Run dummy tests")
      #       console.log("FINAL CHECK RUN", JSON.stringify(dummy, null, 2));
